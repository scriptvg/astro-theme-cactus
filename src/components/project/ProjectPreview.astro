---
import type { CollectionEntry } from "astro:content";
import FormattedDate from "@/components/FormattedDate.astro";
import type { HTMLTag, Polymorphic } from "astro/types";

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & {
  project: CollectionEntry<"project">;
  withDesc?: boolean;
};

const { as: Tag = "div", project, withDesc = true } = Astro.props;
---

<article class="flex flex-col rounded-lg border border-gray-200 dark:border-gray-700 shadow-md overflow-hidden h-full">
  {project.data.coverImage && (
    <a href={`/project/${project.id}/`} class="block aspect-video overflow-hidden">
      <img 
        src={project.data.coverImage.src}
        alt={project.data.coverImage.alt ?? project.data.title}
        class="w-full h-full object-cover transition-transform duration-300 ease-in-out hover:scale-105"
      />
    </a>
  )}
  <div class="p-6 flex flex-col flex-grow">
    <FormattedDate
      class="text-sm font-semibold text-gray-600 dark:text-gray-400 mb-1"
      date={project.data.publishDate}
    />
    <Tag class="text-xl font-bold mb-2">
      {project.data.draft && <span class="text-red-500">(Draft) </span>}
      <a class="cactus-link" data-astro-prefetch href={`/project/${project.id}/`}>
        {project.data.title}
      </a>
    </Tag>
    {withDesc && project.data.description && (
      <p class="text-gray-700 dark:text-gray-300 text-sm line-clamp-3 mb-4 flex-grow">
        {project.data.description}
      </p>
    )}
    {project.data.tags && project.data.tags.length > 0 && (
      <div class="mt-auto pt-4 border-t border-gray-200 dark:border-gray-700">
        <ul class="flex flex-wrap gap-2">
          {project.data.tags.map((tag) => (
            <li>
              <a class="text-xs cactus-link px-2 py-1 bg-gray-100 dark:bg-gray-800 rounded-full" href={`/tags/${tag}/`}>
                #{tag}
              </a>
            </li>
          ))}
        </ul>
      </div>
    )}
  </div>
</article>